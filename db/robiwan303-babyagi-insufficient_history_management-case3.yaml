app: babyagi
repo: https://github.com/robiwan303/babyagi
commit: 9c22f053675710094576bfc4e6527f59a50e6ac2
defect_id: robiwan303-babyagi-insufficient_history_management-case3
type: insufficient history management
case: '3'
consequence:
- IC
locations:
- babyagi.py/task_creation_agent()
trigger_tests:
- '1.Clone the repository via git clone https://github.com/robiwan303/babyagi.git and cd into the cloned repository.

  2.Install the required packages: pip install -r requirements.txt

  3.Copy the .env.example file to .env: cp .env.example .env. This is where you will set the following variables.

  4.Set your OpenAI API key in the OPENAI_API_KEY and OPENAI_API_MODEL variables.

  5.Set the name of the table where the task results will be stored in the RESULTS_STORE_NAME variable.

  6.(Optional) Set the name of the BabyAGI instance in the INSTANCE_NAME variable.

  7.Set the OBJECTIVE variable as "Have a fun day."

  8.Set the INITIAL_TASK variable as "Develop a task list".

  9.Run the script: python babyagi.py

  10.After several rounds of task generation, check whether the newly generated task lists ignore the preceding task results.You
  can observe that these generated tasks are "random combinations," lacking clear
  logical progression or refinement, with no distinct connections between tasks.

  Example:

  Task 45: Have a Picnic in the Park with delicious food and outdoor games

  Task 46: Organize a DIY Spa Day with facemasks, nail painting, and relaxation activities

  Task 47: Organize a Karaoke Night with friends for a night of singing and laughter'
